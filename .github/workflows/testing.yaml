name: .NET Tests
on:
  push:
    branches:
      - TST
jobs:
  build:
    runs-on: windows-ra
    steps:
      - name: build
        run: echo "Building application..."
  test:
    runs-on: windows-ra
    needs: build
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: build maven
        run: mvn -B compile --file pom.xml
        
      - name: Run Unit Tests
        run: dotnet test tests/UnitTests/UnitTests.csproj --configuration Release --logger "trx;LogFileName=unit.trx" --logger "console;verbosity=detailed" -v minimal
        continue-on-error: true
        
      - name: Parse test results and enforce quality gate
        shell: powershell
        run: |
          $files = Get-ChildItem -Path . -Filter unit.trx -Recurse
          if ($files.Count -eq 0) {
            Write-Error "Unit test result file not found!"
            exit 1
          }
          $passed = 0
          $total = 0
          foreach ($file in $files) {
            [xml]$trx = Get-Content $file.FullName
            $results = $trx.TestRun.Results.UnitTestResult
            $total += $results.Count
            $passed += ($results | Where-Object { $_.outcome -eq 'Passed' }).Count
          }
          if ($total -eq 0) {
            Write-Error "No tests found in results!"
            exit 1
          }
          
          $percent = [math]::Round(($passed / $total) * 100)
          Write-Host "Passed: $passed / $total ($percent`%)"
          if ($percent -lt 90) {
            Write-Error "Quality gate failed: Under 90% Passed"
            exit 1
          }
        
      - name: Run Functional Tests
        run: dotnet test tests/FunctionalTests/FunctionalTests.csproj --configuration Release --logger "trx;LogFileName=functional.trx" --logger "console;verbosity=detailed" -v minimal
        
      - name: Run Integration Tests
        run: dotnet test tests/IntegrationTests/IntegrationTests.csproj --configuration Release --logger "trx;LogFileName=integration.trx" --logger "console;verbosity=detailed" -v minimal

      - name: Run Public API Integration Tests (ignorar conflitos de pacote)
        run: dotnet test tests/PublicApiIntegrationTests/PublicApiIntegrationTests.csproj --configuration Release --logger "trx;LogFileName=publicapi.trx" --logger "console;verbosity=detailed" -v minimal

      - name: Run E2E tests (LoginTest and ProductTest)
        run: mvn -B test -Dtest="e2e.tests.LoginTest,e2e.tests.ProductTest"

  deploy:
    runs-on: windows-ra
    needs: test
    if: success()
    steps:
      - name: Deploy step
        run: echo "Deploying application..."
